{"version":3,"sources":["components/Comment/Comment.js","components/CommentsList/CommentsList.jsx","components/NewComment/NewComment.jsx","components/Arrow/Arrow.js","App.jsx","index.jsx"],"names":["Comment","props","imgUrl","name","message","_id","removeComment","className","src","alt","type","onClick","CommentsList","comments","map","comment","defaultProps","initialState","NewComment","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","addComment","this","onSubmit","placeholder","onChange","autoComplete","required","rows","Component","Arrow","goTo","window","scrollBy","onKeyDown","title","currentUrl","location","href","server","includes","App","componentDidMount","a","loadComments","fetch","response","json","loadToServer","method","headers","Accept","body","JSON","stringify","instance","prevState","id","URL","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e65782f7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.scss';\n\n// eslint-disable-next-line max-len\nconst removeImgUrl = 'https://icons-for-free.com/iconfiles/png/128/delete+remove+trash+trash+bin+trash+can+icon-1320073117929397588.png';\n\nexport const Comment = (props) => {\n  const defaultImgUrl = 'https://socpartnerstvo.org/img/avatar_male.png';\n  const {\n    imgUrl,\n    name,\n    message,\n    _id,\n    removeComment,\n  } = props;\n\n  return (\n    <div className=\"comment\">\n      <figure className=\"comment__img\">\n        <img\n          src={imgUrl || defaultImgUrl}\n          alt=\"User avatar\"\n        />\n      </figure>\n\n      <div className=\"comment__content\">\n        <div className=\"comment__name\">\n          <h3>{name}</h3>\n        </div>\n\n        <div className=\"comment__message\">\n          <p>{message}</p>\n        </div>\n\n        <div className=\"comment__id\">\n          <h6>\n            #\n            {_id}\n          </h6>\n        </div>\n        <button\n          className=\"comment__remove remove\"\n          type=\"button\"\n          onClick={() => {\n            removeComment(_id);\n          }}\n        >\n          <img\n            className=\"remove__img\"\n            src={removeImgUrl}\n            alt=\"remove\"\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nComment.propTypes = {\n  _id: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  removeComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CommentsList.scss';\nimport { Comment } from '../Comment/Comment';\n\nexport const CommentsList = ({ comments, removeComment }) => (\n  <>\n    {comments.map(comment => (\n      <Comment\n        key={comment._id}\n        removeComment={removeComment}\n        {...comment}\n      />\n    ))}\n  </>\n);\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      imgUrl: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n    }),\n  ),\n  removeComment: PropTypes.func.isRequired,\n};\n\nCommentsList.defaultProps = {\n  comments: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewComment.scss';\n\nconst initialState = {\n  newComment: {\n    imgUrl: '',\n    name: '',\n    message: '',\n  },\n};\n\nexport class NewComment extends Component {\n  state = { ...initialState.newComment };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addComment } = this.props;\n    const newComment = this.state;\n\n    addComment(newComment);\n\n    this.setState({ ...initialState.newComment });\n  }\n\n  render() {\n    const {\n      imgUrl,\n      name,\n      message,\n    } = this.state;\n\n    const { handleChange, handleSubmit } = this;\n\n    return (\n      <form onSubmit={handleSubmit} className=\"form\">\n        <h2>Оставьте комментарий</h2>\n        <div>\n          <label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Введите имя\"\n              value={name}\n              onChange={handleChange}\n              autoComplete=\"off\"\n              required\n              className=\"form__input\"\n            />\n          </label>\n\n          <label>\n            <input\n              name=\"imgUrl\"\n              type=\"url\"\n              placeholder=\"Вставьте ссылку на аватар (необязательно)\"\n              value={imgUrl}\n              onChange={handleChange}\n              autoComplete=\"off\"\n              className=\"form__input\"\n            />\n          </label>\n        </div>\n\n        <div>\n          <label>\n            <textarea\n              type=\"text\"\n              name=\"message\"\n              placeholder=\"Поделитесь своими мыслями\"\n              value={message}\n              onChange={handleChange}\n              autoComplete=\"off\"\n              rows=\"6\"\n              required\n              className=\"form__input\"\n            />\n          </label>\n        </div>\n\n        <div>\n          <button type=\"submit\" className=\"form__button\">\n            Отправить\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewComment.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Arrow.scss';\n\nexport const Arrow = () => {\n  const goTo = () => {\n    window.scrollBy(0, 10000000000);\n  };\n\n  return (\n    <button\n      className=\"arrow\"\n      onClick={goTo}\n      onKeyDown={goTo}\n      type=\"button\"\n      title=\"scrolling to the last comment\"\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport { CommentsList } from './components/CommentsList/CommentsList';\nimport { NewComment } from './components/NewComment/NewComment';\nimport { Arrow } from './components/Arrow/Arrow';\nimport './App.scss';\n\nconst currentUrl = window.location.href;\nconst server = currentUrl.includes('heroku')\n  ? currentUrl\n  : 'http://localhost:4000/';\n\nexport class App extends Component {\n  state = {\n    comments: [],\n  };\n\n  componentDidMount = async() => {\n    const comments = await this.loadComments();\n\n    this.setState({ comments });\n  }\n\n  loadComments = async() => {\n    const response = await fetch(`${server}books`);\n\n    return response.json();\n  }\n\n  loadToServer = async(comment) => {\n    const response = await fetch(`${server}books/`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(comment),\n    });\n\n    return response.json();\n  }\n\n  addComment = async(comment) => {\n    const instance = await this.loadToServer(comment);\n\n    this.setState(prevState => ({\n      comments: [...prevState.comments, instance],\n    }));\n  };\n\n  removeComment = async(id) => {\n    const URL = `${server}books/${id}`;\n\n    await fetch(URL, { method: 'DELETE' });\n\n    this.setState(({ comments }) => ({\n      comments: comments.filter(comment => comment._id !== id),\n    }));\n  }\n\n  render() {\n    const { comments } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__comments comments\">\n          <CommentsList\n            comments={comments}\n            removeComment={this.removeComment}\n          />\n        </div>\n\n        <div className=\"app__form\">\n          <NewComment addComment={this.addComment} />\n        </div>\n\n        <Arrow />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}